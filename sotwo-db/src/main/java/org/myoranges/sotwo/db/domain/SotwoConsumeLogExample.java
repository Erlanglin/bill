package org.myoranges.sotwo.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class SotwoConsumeLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated Sat May 12 10:41:29 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated Sat May 12 10:41:29 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated Sat May 12 10:41:29 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated Sat May 12 10:41:29 CST 2018
     */
    public SotwoConsumeLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated Sat May 12 10:41:29 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated Sat May 12 10:41:29 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated Sat May 12 10:41:29 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated Sat May 12 10:41:29 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated Sat May 12 10:41:29 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated Sat May 12 10:41:29 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated Sat May 12 10:41:29 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated Sat May 12 10:41:29 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated Sat May 12 10:41:29 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated Sat May 12 10:41:29 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    public SotwoConsumeLogExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    public SotwoConsumeLogExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated Sat May 12 10:41:29 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andConsumeTitleIsNull() {
            addCriterion("consume_title is null");
            return (Criteria) this;
        }

        public Criteria andConsumeTitleIsNotNull() {
            addCriterion("consume_title is not null");
            return (Criteria) this;
        }

        public Criteria andConsumeTitleEqualTo(String value) {
            addCriterion("consume_title =", value, "consumeTitle");
            return (Criteria) this;
        }

        public Criteria andConsumeTitleNotEqualTo(String value) {
            addCriterion("consume_title <>", value, "consumeTitle");
            return (Criteria) this;
        }

        public Criteria andConsumeTitleGreaterThan(String value) {
            addCriterion("consume_title >", value, "consumeTitle");
            return (Criteria) this;
        }

        public Criteria andConsumeTitleGreaterThanOrEqualTo(String value) {
            addCriterion("consume_title >=", value, "consumeTitle");
            return (Criteria) this;
        }

        public Criteria andConsumeTitleLessThan(String value) {
            addCriterion("consume_title <", value, "consumeTitle");
            return (Criteria) this;
        }

        public Criteria andConsumeTitleLessThanOrEqualTo(String value) {
            addCriterion("consume_title <=", value, "consumeTitle");
            return (Criteria) this;
        }

        public Criteria andConsumeTitleLike(String value) {
            addCriterion("consume_title like", value, "consumeTitle");
            return (Criteria) this;
        }

        public Criteria andConsumeTitleNotLike(String value) {
            addCriterion("consume_title not like", value, "consumeTitle");
            return (Criteria) this;
        }

        public Criteria andConsumeTitleIn(List<String> values) {
            addCriterion("consume_title in", values, "consumeTitle");
            return (Criteria) this;
        }

        public Criteria andConsumeTitleNotIn(List<String> values) {
            addCriterion("consume_title not in", values, "consumeTitle");
            return (Criteria) this;
        }

        public Criteria andConsumeTitleBetween(String value1, String value2) {
            addCriterion("consume_title between", value1, value2, "consumeTitle");
            return (Criteria) this;
        }

        public Criteria andConsumeTitleNotBetween(String value1, String value2) {
            addCriterion("consume_title not between", value1, value2, "consumeTitle");
            return (Criteria) this;
        }

        public Criteria andConsumeAddressIsNull() {
            addCriterion("consume_address is null");
            return (Criteria) this;
        }

        public Criteria andConsumeAddressIsNotNull() {
            addCriterion("consume_address is not null");
            return (Criteria) this;
        }

        public Criteria andConsumeAddressEqualTo(String value) {
            addCriterion("consume_address =", value, "consumeAddress");
            return (Criteria) this;
        }

        public Criteria andConsumeAddressNotEqualTo(String value) {
            addCriterion("consume_address <>", value, "consumeAddress");
            return (Criteria) this;
        }

        public Criteria andConsumeAddressGreaterThan(String value) {
            addCriterion("consume_address >", value, "consumeAddress");
            return (Criteria) this;
        }

        public Criteria andConsumeAddressGreaterThanOrEqualTo(String value) {
            addCriterion("consume_address >=", value, "consumeAddress");
            return (Criteria) this;
        }

        public Criteria andConsumeAddressLessThan(String value) {
            addCriterion("consume_address <", value, "consumeAddress");
            return (Criteria) this;
        }

        public Criteria andConsumeAddressLessThanOrEqualTo(String value) {
            addCriterion("consume_address <=", value, "consumeAddress");
            return (Criteria) this;
        }

        public Criteria andConsumeAddressLike(String value) {
            addCriterion("consume_address like", value, "consumeAddress");
            return (Criteria) this;
        }

        public Criteria andConsumeAddressNotLike(String value) {
            addCriterion("consume_address not like", value, "consumeAddress");
            return (Criteria) this;
        }

        public Criteria andConsumeAddressIn(List<String> values) {
            addCriterion("consume_address in", values, "consumeAddress");
            return (Criteria) this;
        }

        public Criteria andConsumeAddressNotIn(List<String> values) {
            addCriterion("consume_address not in", values, "consumeAddress");
            return (Criteria) this;
        }

        public Criteria andConsumeAddressBetween(String value1, String value2) {
            addCriterion("consume_address between", value1, value2, "consumeAddress");
            return (Criteria) this;
        }

        public Criteria andConsumeAddressNotBetween(String value1, String value2) {
            addCriterion("consume_address not between", value1, value2, "consumeAddress");
            return (Criteria) this;
        }

        public Criteria andConsumeCategoryIdIsNull() {
            addCriterion("consume_category_id is null");
            return (Criteria) this;
        }

        public Criteria andConsumeCategoryIdIsNotNull() {
            addCriterion("consume_category_id is not null");
            return (Criteria) this;
        }

        public Criteria andConsumeCategoryIdEqualTo(Integer value) {
            addCriterion("consume_category_id =", value, "consumeCategoryId");
            return (Criteria) this;
        }

        public Criteria andConsumeCategoryIdNotEqualTo(Integer value) {
            addCriterion("consume_category_id <>", value, "consumeCategoryId");
            return (Criteria) this;
        }

        public Criteria andConsumeCategoryIdGreaterThan(Integer value) {
            addCriterion("consume_category_id >", value, "consumeCategoryId");
            return (Criteria) this;
        }

        public Criteria andConsumeCategoryIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("consume_category_id >=", value, "consumeCategoryId");
            return (Criteria) this;
        }

        public Criteria andConsumeCategoryIdLessThan(Integer value) {
            addCriterion("consume_category_id <", value, "consumeCategoryId");
            return (Criteria) this;
        }

        public Criteria andConsumeCategoryIdLessThanOrEqualTo(Integer value) {
            addCriterion("consume_category_id <=", value, "consumeCategoryId");
            return (Criteria) this;
        }

        public Criteria andConsumeCategoryIdIn(List<Integer> values) {
            addCriterion("consume_category_id in", values, "consumeCategoryId");
            return (Criteria) this;
        }

        public Criteria andConsumeCategoryIdNotIn(List<Integer> values) {
            addCriterion("consume_category_id not in", values, "consumeCategoryId");
            return (Criteria) this;
        }

        public Criteria andConsumeCategoryIdBetween(Integer value1, Integer value2) {
            addCriterion("consume_category_id between", value1, value2, "consumeCategoryId");
            return (Criteria) this;
        }

        public Criteria andConsumeCategoryIdNotBetween(Integer value1, Integer value2) {
            addCriterion("consume_category_id not between", value1, value2, "consumeCategoryId");
            return (Criteria) this;
        }

        public Criteria andPayUserIdIsNull() {
            addCriterion("pay_user_id is null");
            return (Criteria) this;
        }

        public Criteria andPayUserIdIsNotNull() {
            addCriterion("pay_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andPayUserIdEqualTo(Integer value) {
            addCriterion("pay_user_id =", value, "payUserId");
            return (Criteria) this;
        }

        public Criteria andPayUserIdNotEqualTo(Integer value) {
            addCriterion("pay_user_id <>", value, "payUserId");
            return (Criteria) this;
        }

        public Criteria andPayUserIdGreaterThan(Integer value) {
            addCriterion("pay_user_id >", value, "payUserId");
            return (Criteria) this;
        }

        public Criteria andPayUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("pay_user_id >=", value, "payUserId");
            return (Criteria) this;
        }

        public Criteria andPayUserIdLessThan(Integer value) {
            addCriterion("pay_user_id <", value, "payUserId");
            return (Criteria) this;
        }

        public Criteria andPayUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("pay_user_id <=", value, "payUserId");
            return (Criteria) this;
        }

        public Criteria andPayUserIdIn(List<Integer> values) {
            addCriterion("pay_user_id in", values, "payUserId");
            return (Criteria) this;
        }

        public Criteria andPayUserIdNotIn(List<Integer> values) {
            addCriterion("pay_user_id not in", values, "payUserId");
            return (Criteria) this;
        }

        public Criteria andPayUserIdBetween(Integer value1, Integer value2) {
            addCriterion("pay_user_id between", value1, value2, "payUserId");
            return (Criteria) this;
        }

        public Criteria andPayUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("pay_user_id not between", value1, value2, "payUserId");
            return (Criteria) this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("price is null");
            return (Criteria) this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("price is not null");
            return (Criteria) this;
        }

        public Criteria andPriceEqualTo(Double value) {
            addCriterion("price =", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotEqualTo(Double value) {
            addCriterion("price <>", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThan(Double value) {
            addCriterion("price >", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("price >=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThan(Double value) {
            addCriterion("price <", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThanOrEqualTo(Double value) {
            addCriterion("price <=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceIn(List<Double> values) {
            addCriterion("price in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotIn(List<Double> values) {
            addCriterion("price not in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceBetween(Double value1, Double value2) {
            addCriterion("price between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotBetween(Double value1, Double value2) {
            addCriterion("price not between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andRegTimeIsNull() {
            addCriterion("reg_time is null");
            return (Criteria) this;
        }

        public Criteria andRegTimeIsNotNull() {
            addCriterion("reg_time is not null");
            return (Criteria) this;
        }

        public Criteria andRegTimeEqualTo(LocalDateTime value) {
            addCriterion("reg_time =", value, "regTime");
            return (Criteria) this;
        }

        public Criteria andRegTimeNotEqualTo(LocalDateTime value) {
            addCriterion("reg_time <>", value, "regTime");
            return (Criteria) this;
        }

        public Criteria andRegTimeGreaterThan(LocalDateTime value) {
            addCriterion("reg_time >", value, "regTime");
            return (Criteria) this;
        }

        public Criteria andRegTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("reg_time >=", value, "regTime");
            return (Criteria) this;
        }

        public Criteria andRegTimeLessThan(LocalDateTime value) {
            addCriterion("reg_time <", value, "regTime");
            return (Criteria) this;
        }

        public Criteria andRegTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("reg_time <=", value, "regTime");
            return (Criteria) this;
        }

        public Criteria andRegTimeIn(List<LocalDateTime> values) {
            addCriterion("reg_time in", values, "regTime");
            return (Criteria) this;
        }

        public Criteria andRegTimeNotIn(List<LocalDateTime> values) {
            addCriterion("reg_time not in", values, "regTime");
            return (Criteria) this;
        }

        public Criteria andRegTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("reg_time between", value1, value2, "regTime");
            return (Criteria) this;
        }

        public Criteria andRegTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("reg_time not between", value1, value2, "regTime");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andHandlerTimeIsNull() {
            addCriterion("handler_time is null");
            return (Criteria) this;
        }

        public Criteria andHandlerTimeIsNotNull() {
            addCriterion("handler_time is not null");
            return (Criteria) this;
        }

        public Criteria andHandlerTimeEqualTo(LocalDateTime value) {
            addCriterion("handler_time =", value, "handlerTime");
            return (Criteria) this;
        }

        public Criteria andHandlerTimeNotEqualTo(LocalDateTime value) {
            addCriterion("handler_time <>", value, "handlerTime");
            return (Criteria) this;
        }

        public Criteria andHandlerTimeGreaterThan(LocalDateTime value) {
            addCriterion("handler_time >", value, "handlerTime");
            return (Criteria) this;
        }

        public Criteria andHandlerTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("handler_time >=", value, "handlerTime");
            return (Criteria) this;
        }

        public Criteria andHandlerTimeLessThan(LocalDateTime value) {
            addCriterion("handler_time <", value, "handlerTime");
            return (Criteria) this;
        }

        public Criteria andHandlerTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("handler_time <=", value, "handlerTime");
            return (Criteria) this;
        }

        public Criteria andHandlerTimeIn(List<LocalDateTime> values) {
            addCriterion("handler_time in", values, "handlerTime");
            return (Criteria) this;
        }

        public Criteria andHandlerTimeNotIn(List<LocalDateTime> values) {
            addCriterion("handler_time not in", values, "handlerTime");
            return (Criteria) this;
        }

        public Criteria andHandlerTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("handler_time between", value1, value2, "handlerTime");
            return (Criteria) this;
        }

        public Criteria andHandlerTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("handler_time not between", value1, value2, "handlerTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated do_not_delete_during_merge Sat May 12 10:41:29 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table sotwo_consume_log
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        private SotwoConsumeLogExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sotwo_consume_log
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        protected Criteria(SotwoConsumeLogExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sotwo_consume_log
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public SotwoConsumeLogExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sotwo_consume_log
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This interface was generated by MyBatis Generator.
         * This interface corresponds to the database table sotwo_consume_log
         *
         * @mbg.generated
         * @project https://github.com/itfsw/mybatis-generator-plugin
         */
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table sotwo_consume_log
             *
             * @mbg.generated
             * @project https://github.com/itfsw/mybatis-generator-plugin
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sotwo_consume_log
     *
     * @mbg.generated Sat May 12 10:41:29 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}